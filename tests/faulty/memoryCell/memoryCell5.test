Process Memory {
    w: BOOL; // the last value written
	r: BOOL; // the value we can read from the memory
    c0: BOOL; // the first bit
    c1: BOOL; // the second bit
    c2: BOOL; // the third bit
	c3: BOOL; // fourth but
	c4: BOOL; // fith bit
  
    
    Initial: w && c0 && c1 && c2 && c3 && c4 && r;
	
	[write1] true -> w=true, c0=true, c1=true, c2=true, c3=true, c4=true, r=true;// memory change accordingly
	[write0] true -> w=false, c0=false, c1=false, c2=false, c3=false, c4=false, r=false;// memory change accordingly
	
	[read0] !r -> r = r;
	[read1] r -> r = r;

	[fail1] faulty true -> c0=!c0, r=(!c0&&c1 &&c2)||(!c0&&c2&&c3)||(!c0&&c3&&c4)||(!c0&&c1&&c3)||(!c0&&c1&&c4)||(c1&&c3&&c4)||(c1&&c2&&c4)||(c2&&c3&&c4)||(c1&&c2&&c3)||(!c0&&c2&&c4); // a bit is changed, its a fault
	
	[fail2] faulty true -> c1=!c1, r=(c0&&!c1 &&c2)||(c0&&c2&&c3)||(c0&&c3&&c4)||(c0&&!c1&&c3)||(c0&&!c1&&c4)||(!c1&&c3&&c4)||(!c1&&c2&&c4)||(c2&&c3&&c4)||(!c1&&c2&&c3)||(c0&&c2&&c4); // similar to above
	
	[fail3] faulty true -> c2=!c2, r=(c0&&c1 &&!c2)||(c0&&!c2&&c3)||(c0&&c3&&c4)||(c0&&c1&&c3)||(c0&&c1&&c4)||(c1&&c3&&c4)||(c1&&!c2&&c4)||(!c2&&c3&&c4)||(c1&&!c2&&c3)||(c0&&!c2&&c4); // similar to above
    
    [fail4] faulty true -> c3=!c3, r=(c0&&c1 &&c2)||(c0&&c2&&!c3)||(c0&&!c3&&c4)||(c0&&c1&&!c3)||(c0&&c1&&c4)||(c1&&!c3&&c4)||(c1&&c2&&c4)||(c2&&!c3&&c4)||(c1&&c2&&!c3)||(c0&&c2&&c4);
    
	[fail5] faulty true -> c4=!c4, r=(c0&&c1 &&c2)||(c0&&c2&&c3)||(c0&&c3&&!c4)||(c0&&c1&&c3)||(c0&&c1&&!c4)||(c1&&c3&&!c4)||(c1&&c2&&!c4)||(c2&&c3&&!c4)||(c1&&c2&&c3)||(c0&&c2&&!c4);
       
}

Main(){
	m1: Memory;
	run m1();
}

