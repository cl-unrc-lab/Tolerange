// Board:
//
//   [.] [C] [.] 
//   [.] [M] [.] 
//   [X] [D] [.] 

Process Robot {
    col : INT ;    // col in [0,width-1] and row  in [0,length-1] indicate
    row : INT ;    // the robot's position in the board

    s_dog : BOOL ;  // sense dog
    h_dog : BOOL ;  // herd dog
    turn : BOOL ;  // player turn
    dogs : INT ;  // number of dogs
    retrieved: BOOL;

   Rewards :
       //dogs > 0 : -1 ,
       turn && retrieved: 5 ;

   Controller : turn;
   Goal : dogs == 0;
    // Initial configuration
    Initial : col==2 && row==0 && !turn && !s_dog && !h_dog  && dogs==5 && !retrieved;

    // animals movements

    [a_appears] !turn && dogs > 0 && !s_dog && !h_dog -> 0.5: turn = true, s_dog = true
    ++0.5: turn = true;
    [a_idle] !turn -> turn = true;
    [a_unfollow] !turn && h_dog -> turn = true, h_dog = false;
    [safe] !turn && retrieved -> turn = true, retrieved = false;

    // robot moves

    [r_l] turn && !s_dog && col > 0 -> turn = false, col = (col - 1);
    [r_r] turn && !s_dog && col < 2 -> turn = false, col = (col + 1);
    [r_u] turn && !s_dog && row > 0 -> turn = false, row = (row - 1);
    [r_d] turn && !s_dog && row < 2 -> turn = false, row = (row + 1);
    [r_herd] turn && s_dog -> turn = false, h_dog = true, s_dog = false;
    [r_retrieve] turn && h_dog && dogs >0 && (row == 2) && (col == 1) -> turn = false, h_dog = false, dogs = dogs -1, retrieved = true;
    [r_idle] turn -> turn = false;
}

Main() {
    robot : Robot ;
    run robot() ;
}
