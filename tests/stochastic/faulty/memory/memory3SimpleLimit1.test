Process Memory {
    v:INT; //0..3
    s:INT; //0..2    0=normal, 1=faulty, 2=refreshing
    f:INT; //0..1	 fault limiting artifact
  
    Initial: v==0 && s==0 && f==0;
	
	[w0] !(s==2) -> v=0,s=0;
	[w1] !(s==2) -> v=3,s=0;
	[r0] !(s==2) && v<2 -> v = v;
	[r1] !(s==2) && v>1 -> v = v;
	[tick] !(s==2) -> 0.5 : s=2
					++ 0.5 : s=1
					++ 0.0 : v = v;
	[refresh] s==2 && v<2 -> s=0, v=0; 
	[refresh] s==2 && v>1 -> s=0, v=3;
	[fault] faulty s==1 && f<1 && v<3-> s=0, v=v+1,f=f+1;
	[fault] faulty s==1 && f<1 && v>2-> s=0, v=2,f=f+1;
	[fault] faulty s==1 && f<1 && v>0-> s=0, v=v-1,f=f+1;
	[fault] faulty s==1 && f<1 && v<1-> s=0, v=1,f=f+1;
}

Main(){
	m1: Memory;
	run m1();
}


