Process Memory {
    w: BOOL; // the last value written, 
	r: BOOL; // the value we can read from the memory
    c0: BOOL; // the first bit
    c1: BOOL; // the second bit
    c2: BOOL; // the third bit
	c3: BOOL; // fourth but
	c4: BOOL; // fifth bit
    s: INT; // 0=normal,1=refreshing,2=possible fault
  
    Initial: w && c0 && c1 && c2 && c3 && c4 && r && s==0;
	
	[write1] !(s==1) -> w=true, c0=true, c1=true, c2=true, c3=true, c4=true, r =true;
	[write0] !(s==1) -> w=false, c0=false, c1=false, c2=false, c3=false, c4=false, r =false;
	[read0] !(s==1) && !r -> r = r;
	[read1] !(s==1) && r -> r = r;

	[fail1] faulty s==2 -> s=0, c0=!c0, r=(!c0&&c1 &&c2)||(!c0&&c2&&c3)||(!c0&&c3&&c4)||(!c0&&c1&&c3)||(!c0&&c1&&c4)||(c1&&c3&&c4)||(c1&&c2&&c4)||(c2&&c3&&c4)||(c1&&c2&&c3)||(!c0&&c2&&c4); 

	[fail2] faulty s==2 -> s=0, c1=!c1, r=(c0&&!c1 &&c2)||(c0&&c2&&c3)||(c0&&c3&&c4)||(c0&&!c1&&c3)||(c0&&!c1&&c4)||(!c1&&c3&&c4)||(!c1&&c2&&c4)||(c2&&c3&&c4)||(!c1&&c2&&c3)||(c0&&c2&&c4);

	[fail3] faulty s==2 -> s=0, c2=!c2, r=(c0&&c1 &&!c2)||(c0&&!c2&&c3)||(c0&&c3&&c4)||(c0&&c1&&c3)||(c0&&c1&&c4)||(c1&&c3&&c4)||(c1&&!c2&&c4)||(!c2&&c3&&c4)||(c1&&!c2&&c3)||(c0&&!c2&&c4);

	[fail4] faulty s==2 -> s=0, c3=!c3, r=(c0&&c1 &&c2)||(c0&&c2&&!c3)||(c0&&!c3&&c4)||(c0&&c1&&!c3)||(c0&&c1&&c4)||(c1&&!c3&&c4)||(c1&&c2&&c4)||(c2&&!c3&&c4)||(c1&&c2&&!c3)||(c0&&c2&&c4);    

	[fail5] faulty s==2 -> s=0, c4=!c4, r=(c0&&c1 &&c2)||(c0&&c2&&c3)||(c0&&c3&&!c4)||(c0&&c1&&c3)||(c0&&c1&&!c4)||(c1&&c3&&!c4)||(c1&&c2&&!c4)||(c2&&c3&&!c4)||(c1&&c2&&c3)||(c0&&c2&&!c4);
	[tick] s==0 -> 
				 0.5 : s=1
				++ 0.5 : s=2;
	[tick] s==2 -> 0.5 : r = r
				++ 0.5 : s=1;
	[refresh] s==1 && (c0&&c1 &&c2)||(c0&&c2&&c3)||(c0&&c3&&c4)||(c0&&c1&&c3)||(c0&&c1&&c4)||(c1&&c3&&c4)||(c1&&c2&&c4)||(c2&&c3&&c4)||(c1&&c2&&c3)||(c0&&c2&&c4) -> s=0, w=true, r = true; 
	[refresh] s==1 && !(c0&&c1 &&c2)||(c0&&c2&&c3)||(c0&&c3&&c4)||(c0&&c1&&c3)||(c0&&c1&&c4)||(c1&&c3&&c4)||(c1&&c2&&c4)||(c2&&c3&&c4)||(c1&&c2&&c3)||(c0&&c2&&c4) -> s=0, w=false, r = false;   
}

Main(){
	m1: Memory;
	run m1();
}


